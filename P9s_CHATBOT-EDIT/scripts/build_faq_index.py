#Path : scripts/build_faq_index.py
"""
scripts/build_faq_index.py
---------------------------------------------------
‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå faiss_index.bin ‡∏à‡∏≤‡∏Å knowledge_base.csv
‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏ß‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå (FAISS)
"""

import pandas as pd
import faiss
import os
import pickle
from sentence_transformers import SentenceTransformer

def main():
    # === Path ‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    DATA_DIR = os.path.join(BASE_DIR, "data")
    CSV_PATH = os.path.join(DATA_DIR, "knowledge_base.csv")
    INDEX_PATH = os.path.join(DATA_DIR, "faiss_index.bin")
    MAPPING_PATH = os.path.join(DATA_DIR, "faq_mapping.pkl")

    # === ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ù‡∏±‡∏á‡πÄ‡∏ß‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå
    print("üîç Loading sentence-transformer model...")
    model = SentenceTransformer("all-MiniLM-L6-v2")

    # === ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ
    print(f"üìö Loading knowledge base from: {CSV_PATH}")
    df = pd.read_csv(CSV_PATH)

    if "question" not in df.columns or "answer" not in df.columns:
        raise ValueError("‚ùå ‡πÑ‡∏ü‡∏•‡πå knowledge_base.csv ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 'question' ‡πÅ‡∏•‡∏∞ 'answer'")

    # === ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå
    print("‚öôÔ∏è Encoding questions into vectors...")
    embeddings = model.encode(df["question"].tolist(), show_progress_bar=True)

    # === ‡∏™‡∏£‡πâ‡∏≤‡∏á FAISS Index
    print("üß† Building FAISS index...")
    dimension = embeddings[0].shape[0]
    index = faiss.IndexFlatL2(dimension)
    index.add(embeddings)

    # === ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Index ‡πÅ‡∏•‡∏∞ Mapping
    print(f"üíæ Saving index to: {INDEX_PATH}")
    faiss.write_index(index, INDEX_PATH)

    with open(MAPPING_PATH, "wb") as f:
        pickle.dump(df.to_dict(orient="records"), f)

    print("‚úÖ Success! FAISS index & mapping saved.")

if __name__ == "__main__":
    main()

